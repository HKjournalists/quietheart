*一些资料
*需要学习的

*一些资料
===================
1,关于插件
http://doc.qt.nokia.com/4.5/tools-plugandpaint.html
介绍了如何结合qt的一些宏(例如Q_DECLARE_INTERFACE)，编写一个plugin来扩展应用程序。这里给了一个小例子.
大致过程按照我的理解大致是：
1)定义一个接口类，然后用Q_DECLARE_INTERFACE指明一下。
2）在plugin的相关代码中实现这个接口，实现的类定义中使用Q_INTERFACES,来指明实现哪个接口，
在.cpp文件中使用Q_EXPORT_PLUGIN2指明使用这个plugin的地方使用什么名字进行使用。
3)在main.cpp或者其他使用这个plugin的地方，使用宏： Q_IMPORT_PLUGIN,对应于Q_EXPORT_PLUGIN2.

关于这些宏（例如Q_DECLARE_INTERFACE），可以到
http://doc.qt.nokia.com/4.5/functions.html
搜索。

2,QSharedData,QSharedDataPointer,QExplicitlySharedDataPointer相关
参考：
假设我们定义一个类Employee,这个类的数据我们都把它存放在另一个类的对象中（例如d）,那么用到QSharedData了。
大致如下：
1）定义Employee
2)将数据定义为：QSharedDataPointer<EmployeeData> d;
3)定义EmployeeData,这个类型继承了QSharedData,重载了构造，拷贝构造，析构函数，并且有自定义的数据域。
这样，d就是一个所有Employee对象都共享的变量，使用QSharedDataPointer表示隐式共享，这样的数据在读的时候不同的对象都只是一个引用，只有在写的时候，为了防止影响其他对象，才会发生copy,也就是说copy-on-write.
如果使用了QExplicitlySharedDataPointer则表示显示共享，不会有copy-on-write,也就是说改变一个，另外一个也会变化。
这里，QSharedDataPointer和QExplicitlySharedDataPointer指向QSharedData对象。
具体就参见:http://doc.qt.nokia.com/4.5/qshareddatapointer.html


*需要学习的
===================
1)delegate是什么东西？
举例：
给一个listWidget设定一个delegate，然后setdata。
自定一个delegate，然后实现它的paint函数，其中paint函数中的index中，可以获取setData中的数据。
listWidgetItem的内容就是delegate的paint中绘制的。
