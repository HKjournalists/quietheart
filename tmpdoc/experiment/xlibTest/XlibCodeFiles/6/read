7)不知道各位是否有看明白读到这里,总之如果你不在乎界面这个东西的话,XLIB再适合
你不过了,比如你只需要画些数学函数什么的,XLIB是再合适不过的东西了,GCC是你
最好的工具,数学与C就是你与计算机之间的语言.多么单纯的与舒适的环境也只能在
GNU/LINUX上找到了.
抱歉我这人特没耐性写这些文章,如果那位好心人能完善一下此文档或者另砌炉罩那
再好不过了.
最后推荐各位下载XLIB手册,里面讲的已经很全面了.下载地址在我主页就能找到一个,
http://cn.geocities.com/algogroup/algo/data/xlib-manual.tar.gz
当然问man也行. 

忘了件事,那就是关于简单的GUI元素实现的问题,这里举个最简单的例子-按钮,
坦率的说,GTK和QT提供的按钮就是M$win的风格,我最讨厌这种风格了,而且写出来
的软件都一个样,实在太过女性化.所以这里要告诉你如何直接用XLIB来搞怪.
如果你不是来找FUN的,那你就不用继续看下去了.

按钮其实就是确定鼠标的落点是否在一个矩形中,XLIB已经提供全套的事件检测,
对于按钮来说需要知道两个事件,一个是鼠标是否被按下了以及坐标,另一个是
鼠标是否被释放了以及释放时的坐标,如果这两个坐标都落在被定义的那个矩形
中(也就是按钮面积中)那么就表示按钮被按动了.
另外就是些美化工作,在鼠标按钮按下后画一个被按动的按钮去替代原先的按钮,
反之亦然.
在这里我提供了一个简单的范例在附件,是一个简单的GUI下的cdplayer,程序写
得很简单,只是为了说明一个思路. 其实你完全可以按照你的思路来写一套GUI的
基本控件,然后你把它做成你自己的库,在以后的程序中就可以引用了.

有人问为什么要这么做,原因很简单,这样的程序移植性高,依赖性弱,速度快.
而且更好玩. 
