20111020
=============
To 黄强，李小滢，宫政
From吕凯
CC康成一，王亮
一、总体信息：
以下是我目前所了解的。
过程：
1）上层Feature提供开始的顺序图，其中包含上层Feature中所需要的接口（我们
关心的应该主要在其中的resource之下部分）。
2）我们调查MBP相关代码，根据其代码原有的类似的功能，确定接口的实现的可能性。
3）根据我们调查结果，为Feature侧提供我们解析的MBP中相关功能的时序（如果
发现Feature侧所需接口的实现与所调查得到的时序存在冲突，导致接口实现会有
问题，那么则可能需要和Feature部分交互，他们再修改他们的时序图，即修改所
需接口的形式）。
3）协调好接口的形式之后，我们就开始根据之前我们所调查的，将接口实现（也
就是形成wrapper的接口），提供给他们。

情况：
以上叙述，所提到的“接口”，其实主要是为了控制播放、录画等的各种流程的控制
函数。大概对应于原mbp代码的deck部分处理，但是由于现在改成想要通过Feature
来实现相应的控制了，所以去掉原MBP中的deck部分，再将相关时序封装成wrapper
接口，提供给Feature。这也是 PowerOn分支最新代码和原MBP代码之间最大的不同。

理解：
这里所提到的一些概念比较关键，我们这样理解比较直观：
关于deck:
摄像机上面有一个systemblock硬件模块(相当于我们看见的一个控制面板)，可以
控制媒体播放。（例如播放按钮，停止按钮，开始按钮，等等）
但是开发的时候，没有那个systemblock硬件，我们就只能decksim模拟
systemblock模块，让它通过串口发送一系列字符串给 diablo程序，然后diablo代
码中的sc2p代码部分负责分析处理这些字符串，然后达到模拟的目的。这个整体的
部分，叫做deck。
关于decksim使用的相关文档，参见：
http://10.1.2.232:8011/BugManage/bugdetail.aspx?IdDisp=42
附件中有一个简易的版本。

关于Feature:
这个内容理解的比较少，目前所知，主要就是使用Feature来模拟控制媒体播放，
模拟的方式不是通过decksim了，而是通过PC上面的一个图形程序，经过网络连
接，控制板子上面的diablo程序的播放。

关于Clip和take：
刚开始格式化好了一个卡，然后录制的时候，会在卡上自动生成TAKE,CLIP,以及其
他的文件来存放录制的数据以及相应的配置。
录制的时候，一次录制叫做一个take,如果take很大的话，可能就会被分成多个
clip，这些都由前面生成的目录来进行相应的管理。>我们能够在文件系统中看到
每个实实在在的clip的，每个clip应该就是一个独立的文件。

二、工作内容：
1，概要
大体的功能是：指定一个clip（即上一个clip、下一个clip、第一个clip、最后一
个clip），然后定位到该clip头部，然后显示第一 frame，然后暂停。
从摄像机的实体机器操作感觉，这个功能好象类似选定上一首或者下一首视频的然
后显示出视频的第一frame并暂停功能。

综上，我们可知我们目前所需做的工作就是：MBP提供的关键的时序，也就是切换
到指定的clip（上／下／开头／结尾）的时序，然后通过这个时序MBP部分向上提
供相>应的接口。

2，具体
参考文档：http://10.1.3.250:8090/pages/viewpage.action?pageId=4032989
根据理解，翻译出来部分内容如下：
------------------------
用案图， To the beginning of the clip(应该是指定clip头播放)
{feature} {UC07006.7682}:
概要：
*显示任意clip的第一frame的图片。
*到开始的clip取决于当前播放位置，以及cueup操作(指定位置播放)的组合。

前提条件：
*UC0002.10314 Power On结束。
*播放停止，播放暂停，以及播放。
两个不接收搜索的例子：
a)录画中（以后的机种可能会有）
b)Thumbnail显示中

后置条件：
*任意clip开始一帧的画面被显示出来。
*变成播放暂停状态。

范围：
同一记录媒体中可能的所有clip。
（最后clip的最后一祯）
通过例如next,prev等再生控制按钮
利用红外线等的遥控控制。

基本流/UC07006.7682：从当前位置向前移动到最近的clip头？
大致情况:
表示当前位置之前的最近的clip头的画面。
根据当前再生位置的不同，移动的位置有所不同。
1)当前的再生位置不是clip头的情况：当前再生位置所在的clip头的frame。
2)当前的再生位置是clip头的情况：当前位置所在的clip之前的clip头的frame。
前提条件：
*UC0002.10314 Power On结束。
*播放停止，播放暂停，以及播放。
**1倍播放的情况，包含"UC07006.11626 再生動作中に再生位置をクリップ先頭に
変更する"扩展流(一倍播放情况从当前位置移动到
clip头，播放会继续)。

场景：
1)用户要求显示系统当前位置之前最近的clip头画面。
2)系统通知用户接受到了操作。
3)系统将clip开始frame的画面表示出来。
……（剩余还没有看）……
------------------------

3，一些资料说明
对于附件中的内容：
1_decksim_messy：是decksim的ttl脚本的简单使用手册。
2_decksim_process_ply_for_coding：使decksim的ttl脚本的play播放过程的发送
命令序列解析。
Scenario实行工具 使用指南.pdf：是decksim的ttl脚本的正式详细使用手册。
streamcontrol_detail_vxworks.c_log：是某次在实体机器上面运行老版本的
diablo程序的play播放的log文件。
html_cueup：是目前我对“位置设置”在MBP原有代码中相关部分流程的部分解析。

建议跟踪的方法：
根据ttl脚本（即2_decksim_process_ply_for_coding）找到跟踪diablo程序代码
的开始，再从这个开始的代码一直跟踪下去查看其调到的相应函数，的序列以及关
系等，期间参照log进行跟踪会可能更确保。
这里之所以用play部分流程，是因为play部分开始包含了“设置位置”的相关内容。


将要看的内容主要的部分是设置位置部分、选择clip部分。
没有修改过的，可以容易得到log日志的代码在如下路径中的diablo中：
http://10.1.2.228/svn/MBP/software/trunk/MediaBlockLinux/Source/Rootfs

目前我们修改的最新代码路径在：
http://10.1.3.252/subversion/PFX_CODE/repos/03.ProjectTeam/ES/Wrapper/PowerOn/Source/Rootfs

建议用老代码看，因为新代码无法打印日志。
感觉，首先应当能够会在板子上面跑diablo程序，并且使用decksim对diablo进行
简单控制，这样工作比较有方向。
另外，我这周5、下周1休假你们将资料仔细看看，看好开始工作。
以上，2011年10月20日




20111018
=============
当前的状况是：
1)目前play播放只支持一个clip，也无法测试播放中多个clip切换。
2)支持多个clip的播放之后，根据已有的信息以及分析，关于clip位置的指定也完全由上层通过读取一个cliphostlist对象进行控制，而这个对象中的数据是在play开始的时候就已经准备好了，所以应该不需要提供额外的接口。




20111017
=============
一、信息
1.关键：指定clip的接口。
上层Feature所需MBP提供的关键的时序：切换到指定的clip（上／下／开头／结尾）的时序，然后通过这个时序MBP部分向上提供相应的接口。
相关接口的时序大概是参照mbp代码deck部分处理的，所以去掉deck再将相关时序封装成wrapper接口。

2.情况：依赖playback相关实现
通过对MBP代码初步分析，在playback中，应当有了相关的接口；在Feature部分playback相关的顺序图上面应该有所体现。

3.补充：
1）非一倍速度播放之时，切换了clip之后，mbp如何知道相应的clip第一帧的获取以及显示的时机。

二、资料
附件中，包含之前decksim部分处理播放时候ttl脚本具体发送消息给diablo.bin的流程、ttl脚本使用说明、一个从启动到播放的log、以及当前参照ttl流程和log解析的代码流程图（html格式）。
根据ttl脚本找到跟踪diablo.bin代码的开始，再从开始一直下去调到相应的函数，如果参照log会更确保。
代码流程图目前最终跟踪到了playPositionSet()。继


20111014
=============
*根据"UC07006_CueupClipTop.asta"中的cueup top两个部分，看出对clip的定位部分已经在上层处理好了，因为在play的时候已经将clip组织到一个ClipItemListHolder里面了，之后和此相关的工作没有发现有需要mbp部分做的什么。
*根据"UC07006.4640_CueupTopOrEndOfRecordingMedia.asta"中的CueupToEnd对clip的索引在ClipItemListHolder里面，也没有发现和mbp部分有什么关系。
*根据"UC07006.4640_CueupTopOrEndOfRecordingMedia.asta"中的CueupToTop对clip的索引在ClipItemListHolder里面，也没有发现和mbp部分有什么关系。

20111012
=============
尝试通过查看position相关的代码，看是否可以找到指定clip播放的相关部分，并且抽取出来。

20110923
=============
1、参考c11中顺序图UC07006_CueupClipTop.asta中的F4 CueupTop相关内容感觉：
*9中指明，对方需要调用Pause函数，而这个函数由我们提供。
*10中指明，我们需要调用returnEnhancedDecoderPause函数，而这个函数由对方提供。
*17中指明，对方需要调用make，而这个函数由我们提供。
*18中指明，我们需要调用returnClipItemListHolderMake，而这个函数由对方提供。
*19中指明，对方需要调用refer，而这个函数由我们提供。
*20中指明，我们需要调用returnClipItemListHolderRefer，而这个函数由对方提供。
*44中指明，对方需要调用insideChangeSpeed，而这个函数由我们提供。
*45中指明，我们需要调用insideReturnEnhancedMediaPlayerChangeSpeed，而这个函数由对方提供。
*46中指明，对方需要调用insideCueupPlay，而这个函数由我们提供。
*50中指明，对方需要调用resume，而这个函数由我们提供。

问题：
*各个函数的功能，功能在mbp中对应的实现方式（重点）。

*以下这些地方存在疑问，是否在其中不再需要和我们交互。 
a)21中的getTopPlaybackClip调用
b)37中的getNextClip调用

2、查看mbp代码相关
大体的功能是：指定一个clip，然后定位到该clip头部，然后显示第一frame，然后暂停。
原有的ttl脚本中，可以使用position的一个参数来指定定位到一个clip，并且暂停可以用speed来实现，显示应该也可以通过代码来查找到。
所以重点工作是：首先要对相关部分动作的代码流程有所熟悉，其次设计一套可以用来测试的接口以及测试流程，最后根据IA方的要求做相应的调整。
初始化：
播放：
指定clip定位：
暂停：

20110920
=============
从摄像机的实体机器操作感觉，这个功能好象类似选定上一首或者下一首视频的然后显示出视频的第一frame并暂停功能。

20110919
=============
我们侧定义一个wrapper层供IA调用。
IA测定义一个回调函数，供我们调用。

单体测试的方法大致的框架：
obj=get***object() <==获取相应feature的object，这个函数里面将设置对象提供的接口
registerlistener(obj,...) <====注册回调函数，回调函数由IA提供。
obj->function() <====测试接口，该接口最终会调用回调函数。

具体例子代码，可以参见
http://10.1.3.252/subversion/PFX_CODE/repos/03.ProjectTeam/ES/Wrapper/PowerOn/Source/Rootfs/diablo/diabloMainCpu/mbpWprTestMain/mbpWprMain.c

20110906
=============
尝试了解其中c11中98，99部分的内容。先看99部分的内容。
http://10.1.3.250:8090
http://10.1.3.250:8090/pages/viewpage.action?pageId=4032989
用案图， To the beginning of the clip(应该是指定clip头播放)
{feature} {UC07006.7682}:
概要：
*显示任意clip的第一frame的图片。
*到开始的clip取决于当前播放位置，以及cueup操作(指定位置播放)的组合。

前提条件：
*UC0002.10314 Power On结束。
*播放停止，播放暂停，以及播放。
两个不接收搜索的例子：
a)录画中（以后的机种可能会有）
b)Thumbnail显示中

后置条件：
*任意clip开始一帧的画面被显示出来。
*变成播放暂停状态。

范围：
同一记录媒体中可能的所有clip。
（最后clip的最后一祯）
通过例如next,prev等再生控制按钮
利用红外线等的遥控控制。

基本流/UC07006.7682：从当前位置向前移动到最近的clip头？
大致情况:
表示当前位置之前的最近的clip头的画面。
根据当前再生位置的不同，移动的位置有所不同。
1)当前的再生位置不是clip头的情况：当前再生位置所在的clip头的frame。
2)当前的再生位置是clip头的情况：当前位置所在的clip之前的clip头的frame。

前提条件：
*UC0002.10314 Power On结束。
*播放停止，播放暂停，以及播放。
**1倍播放的情况，包含"UC07006.11626 再生動作中に再生位置をクリップ先頭に変更する"扩展流(一倍播放情况从当前位置移动到clip头，播放会继续)。

场景：
1)用户要求显示系统当前位置之前最近的clip头画面。
2)系统通知用户接受到了操作。
3)系统将clip开始frame的画面表示出来。


问题：指定clip头之后，显示clip头的第一frame画面，之后播放停，但是再播放的时候会在之前的位置继续播放还是在clip头的位置播放？

boot -t elf -c "mem=252MB console=ttyS0,115200n8 root=/dev/nfs nfsroot=10.1.0.213:/home/nfs_test ip=10.1.0.185::10.1.0.1:255.255.252.0" net:tftp:vmlinux_dev.elf

boot -t elf -c "mem=252MB console=ttyS0,115200n8 initrd=0x42000000,1032449 rdinit=/sbin/init ip=10.1.0.185::10.1.0.1:255.255.252.0" -initrd sdme:raw:ramdisk.img sdmd:raw:vmlinux_rel.elf

