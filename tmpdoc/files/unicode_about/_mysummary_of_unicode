这里是对学习编码问题时候的简单总结。并不完整，只是一些片段。

Big5,GB2312,GBK,GB18030,SJIS编码.
GB码与BIG5是中国人常用的两种编码集。GB码为大陆使用，BIG5为香港与台湾使用。GBK不是GB.
Big5支持繁体中文，GB2312支持简体中文，Big5,GB2312是GBK的子集，GBK是GB18030的子集。日本：SJIS编码.



Unicode编码与codepage.
如果把各种文字编码形容为各地的方言，那么Unicode就是世界各国合作开发的一种语言。统一了编码，兼容原先各国的文字编码则需要codepage，例如：
codepage=936 简体中文GBK
codepage=950 繁体中文BIG5
codepage=437 美国/加拿大英语
codepage=932 日文
codepage=949 韩文
codepage=866 俄文
codepage=65001 unicode UFT-8


编码的转换：
国标码，区位码，内码：
1）国标码和区位码
国标码=区位码+2020H
也就是：
国标码高位字节=(区号)16+(20)16
国标码低位字节=(位号)16+(20)16

2）机内码和国标码
机内码=国标码+8080H   

3）内码和区位码
汉字内码高位字节=(区号)16+(A0)16
汉字内码低位字节=(位号)16+(A0)16
汉字“啊”的区位码为1601，则其汉字内码为(B0A1)16

4)UTF-8和Unicode:
Unicode和UTF-8之间的转换关系表:
0000 0000-0000 007F | 0xxxxxxx
0000 0000-0080 07FF | 110xxxxx 10xxxxxx
0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx   
0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
Unicode编码转换到UTF-8,简单的把Unicode字节流套到x中就变成UTF-8了。

例:11100100 10111101 10100000à0xE4BDA0 “你”字的UTF-8编码
01001111 01100000        à0x4F60  “你”的Unicode编码
按照UTF-8的编码规则，11100100 10111101 10100000分解如下：xxxx0100 xx111101 xx100000,把除了x之外的数字拼接在一起，01001111 01100000就变成“你”的Unicode编码了.注意UTF-8的最前面３个1，表示整个UTF-8串是由３个字节构成的经过UTF-8编码之后，再也不会出现敏感字符了，因为最高位始终为1。


GBK编码的定位：
GBK编码的范围是：高字节从0x81到0xFE，低字节从0x40到0xFE，同时不包括0x7F。这样如果我们将其排成一个矩形，看上去就少了xx7F一根线。
if 0x81&=ch1&=0xFE and (0x40&=ch2&=0x7E or 0x7E&=ch2&=0xFE): #is gb char
这里ch1和ch2分别是一个字符的高字节和低字节。 
