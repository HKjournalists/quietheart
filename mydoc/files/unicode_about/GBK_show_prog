
http://www.ymysoft.cn/show.asp?id=376

GBK编码汉字显示编程

1、 编码介绍
     GBK全名为汉字内码扩展规范，英文名Chinese Internal Code Specification。K 即是“扩展”所对应的汉语拼音（KuoZhan）中“扩”字的声母。
GBK 亦采用双字节表示，总体编码范围为 8140-FEFE，首字节在 81-FE 之间，尾字节在 40-FE 之间，剔除 xx7F 一条线。总计 23940 个码位，共收入 21886 个汉字和图形符号，其中汉字（包括部首和构件）21003 个，图形符号 883 个。
概况
     1993年，Unicode 1.1版本推出，收录了中国大陆、台湾、日本及韩国通用字符集的汉字，总共有20,902个。
     中国大陆订定了等同于Unicode 1.1版本的“GB 13000.1-93”“信息技术 通用多八位编码字符集（UCS） 第一部分：体系结构与基本多文种平面”。
     由于GB 2312-80只收录了6763个汉字，有不少汉字，如部分在GB 2312-80推出以后才简化的汉字（如“啰”），部分人名用字（如中国前总理朱镕基的“镕”字），台湾及香港使用的繁体字，日语及朝鲜语汉字等，并未有收录在内。中文电脑开发商，于是利用了GB 2312-80未有使用的编码空间，收录了所有出现在Unicode 1.1及GB 13000.1-93之中的汉字，制定了GBK编码。
     根据西方资料，GBK最初是由微软对GB2312的扩展，也就是CP936字码表 (Code Page 936)的扩展（原来的CP936和GB 2312-80一模一样），最初出现于Windows 95简体中文版中，由于Windows产品的流行和在大陆广泛被使用，中华人民共和国国家有关部门将其作为技术规范。注意GBK并非国家正式标准，只是国家技术监督局标准化司、电子工业部科技与质量监督司发布的“技术规范指导性文件”。虽然GBK收录了所有Unicode 1.1及GB 13000.1-93之中的汉字，但是编码方式与Unicode 1.1及GB 13000.1-93不同。仅仅是GB 2312到GB 13000.1-93之间的过渡方案。

2、 汉字的显示（以12×12点阵，模式一方式为例）
     多国点阵字库制作软件模式一方式的扫描方式为字节对齐方式，也就是不足一个字节的用0补充为一个字节。所以每个汉字的占用字节数为2×12＝24个字节。
本示例文件以BC31为基础，着重于汉字显示，一些基本的图形初始化的东西不再重复叙述。
2.1汉字的定位
     要打印一个汉字最首先就是要把该汉字的点阵数据从点阵字库中读取出来，这就关系到点阵字库汉字的定位。那我们如何知道一个汉字所在字库中的位置呢。从上面的编码介绍，我们可以了解到，GBK编码范围是8140-FEFE，剔除xx7F一根线。所以我们可以根据这些计算出我们每一个区有FE-40＝BE即 190个位，比如我们常见的“啊”字，他的编码是B0A0，那么我们就可以根据这个编码来计算出他所在字库的地址。“啊”字的区码为B0，位码位A0，那么他所在的地址为（（0xB0-0x81）×190＋（0xA1/*如果此处小于7F要变为减去0x40*/－0x41））×每个汉字的占用字节数。以 12×12为例，那么汉字“啊”所在的地址为（（0xB0-0x81）×190＋（0xA1－0x40））×24= 216624（十六进制表示为34E30），那么从地址34E30开始的24个字节就是汉字“啊”的点阵数据。
2.2汉字的打印
     将汉字的点阵数据读取出来后，就是如何将汉字显示的问题。因为汉字点阵数据是根据模式来生成的。所以我们在显示汉字前，先要了解这个汉字是根据什么模式来创建的。不同的模式创建出来的数据是不相同的。必须根据创建模式来进行显示。
在这里，我们以最常用的一个模式，也就是多国点阵字库生成软件的模式一，横向字节对其，高位在前的方式。
     我们将从地址34E30读取出24个字节，并将数据放入到一个BUF或者数组，读取出来的数据如下：
00034e30h: 0E 00 EB F0 AA 20 AB A0 AE A0 AA A0 AA A0 EB A0
00034e40h: 8E 20 08 20 08 20 08 60
具体的显示代码如下：
 p=DOT;//DOT为一个字节数组，大小为24
 for(y0=0;y0<12;y0++){
  i=0x80;
  x0=0;
  while(i){
   if(*p&i)
    drwpoint(Mode,FColor,x0+x,y0+y);
   else if(!NoBColor)//此处画背景色
    drwpoint(Mode,BColor,x0+x,y0+y);
   if((x0+8)<type)
   {
    if(*(p+1)&i)
     drwpoint(Mode,FColor,x0+x+8,y0+y);
    else if(!NoBColor)//此处画背景色
     drwpoint(Mode,BColor,x0+x+8,y0+y);
   }
   i>>=1;
   x0++;
  }
  p+=2;
}


3、 总结
     其实汉字的显示是非常简单的。只要了解汉字的定位以及字模的含义，我们就可以非常方便的定位到汉字，并读取出字库数据，将其显示出来。
     在中英文混合显示的时候，因为GBK编码的区码是大于0x80的。而基本的ASCII码都是小于0x80的。当读取到一个大于0x80的字符是，先判断是不是汉字，如果不是汉字则按ASCII码处理，否则按照汉字处理即可。这样，我们可以来区分ASCII码和汉字了。
