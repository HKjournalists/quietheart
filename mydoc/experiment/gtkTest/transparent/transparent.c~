#include <gtk/gtk.h>

gint x = 50;
gint y = 50;
struct MyTData tmp;
int t;
struct MyTData
{
	GtkWidget *fix;
	GtkWidget *button;
};
/* This callback function moves the button to a new position
 * in the Fixed container. */
static void stop_auto_move(GtkWidget *widget,
		gpointer data)
{
	g_source_remove(*((gint*)data));
}
static gint auto_move_button(gpointer data)
{
	x = (x + 10) % 800;
	y = (y + 50) % 480;
	gtk_fixed_move(GTK_FIXED(((struct MyTData*)data)->fix), ((struct MyTData*)data)->button, x, y);
	return TRUE;
}
/* 这个回调函数将按钮移动到固定容器的新位置。 */
void move_button( GtkWidget *widget,
                  GtkWidget *fixed )
{
  x = (x + 30) % 300;
  y = (y + 50) % 300;
  gtk_fixed_move (GTK_FIXED (fixed), widget, x, y); 
}
/*
GtkWidget *window = NULL;
    GtkWidget *fixed = NULL;
    GdkPixbuf *pixbuf = NULL;
    GdkPixmap *pixmap = NULL;
GtkWidget *eventbox;
    GtkWidget *image;
    GdkBitmap *bitmap;
 // Load button
      pixbuf = gdk_pixbuf_new_from_file ("/button_auto.png",NULL);
    image = gtk_image_new_from_pixbuf (pixbuf);

      gtk_container_add(GTK_CONTAINER(eventbox), image);
      gtk_fixed_put (GTK_FIXED (fixed), eventbox, 50,50);
   
    //  Set button mask
      gdk_pixbuf_render_pixmap_and_mask(pixbuf, NULL, &bitmap, 255);
      gtk_widget_shape_combine_mask(eventbox, bitmap, 0, 0);

      gtk_widget_show_all(window);
      gtk_main();
        return 0;


*/

int main( int   argc,
          char *argv[] )
{
  /* GtkWidget 是构件的存储类型 */
  GtkWidget *window;
  GtkWidget *fixed;
  GtkWidget *button;
  GdkPixbuf *pixbuf = NULL;

  GtkWidget *eventbox;
  //GtkWidget *image;
  GdkBitmap *bitmap;
  GdkColor red;
cairo_surface_t *image = NULL;
GdkScreen *screen;
  GdkColormap *rgba;
cairo_t *cr;
  
//GtkWidget *subWindow;

  /* 初始化 */
  gtk_init (&argc, &argv);
    
  /* 创建一个新窗口 */
  window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window), "Fixed Container");
//gtk_window_set_default_size(GTK_WINDOW(window), 100,100);
  gtk_window_set_position(GTK_WINDOW(window), GTK_WIN_POS_CENTER);
/*去掉标题栏*/
gtk_window_set_decorated(GTK_WINDOW(window), FALSE);
/*设置窗口背景*/
gdk_color_parse ("red", &red);
gtk_widget_modify_bg (window, GTK_STATE_NORMAL, &red);

  /* 为窗口的 "destroy" 事件设置一个信号处理函数 */ 
  g_signal_connect (G_OBJECT (window), "destroy",
		    G_CALLBACK (gtk_main_quit), NULL);
 
  /* 设置窗口的边框宽度 */
  //gtk_container_set_border_width (GTK_CONTAINER (window), 10);

  //image = gtk_image_new_from_file("./bg.bmp");
  //gtk_container_add(GTK_CONTAINER(window), image);
  //gtk_window_set_opacity (GTK_WINDOW(window), 0.5);
//gdk_window_set_back_pixmap (window->window, NULL, FALSE);


  /* 创建一个固定容器 */
  fixed = gtk_fixed_new ();
//gtk_fixed_set_has_window(GTK_FIXED(fixed), TRUE);
  gtk_container_add (GTK_CONTAINER (window), fixed);
  //gtk_widget_show (fixed);


//pixbuf = gdk_pixbuf_new_from_file ("/button_auto.png",NULL);
//image = gtk_image_new_from_pixbuf (pixbuf);/*???????????????*/
//image = gtk_image_new_from_file("/button_auto.png");
//eventbox = gtk_event_box_new();
//gtk_container_add(GTK_CONTAINER(window), image);
//gtk_container_add (GTK_CONTAINER (window), eventbox);
//gtk_fixed_put (GTK_FIXED (fixed), eventbox, 50,50); 
  //  Set button mask
      //gdk_pixbuf_render_pixmap_and_mask(pixbuf, NULL, &bitmap, 127);
      //gtk_widget_shape_combine_mask(eventbox, bitmap, 0, 0); 


  button = gtk_button_new_with_label("Stop!!");

screen = gtk_widget_get_screen (button);
  rgba = gdk_screen_get_rgba_colormap(screen);
  gtk_widget_set_colormap (button, rgba);
gtk_widget_set_app_paintable (GTK_WIDGET (button), TRUE);
image = cairo_image_surface_create_from_png("tvButton.png");
cr = gdk_cairo_create(button);
cairo_set_source_surface(cr, image, 0,0);
cairo_set_operator(cr, CAIRO_OPERATOR_SOURCE);
cairo_paint(cr);
cairo_destroy(cr);
   //button = gtk_button_new();
   //gtk_container_add (GTK_CONTAINER(button), eventbox);
  tmp.fix = fixed;
  tmp.button = button;
  gtk_fixed_put(GTK_FIXED(fixed), button, 200,200);
  gtk_widget_show(button);
  //t = g_timeout_add(500, auto_move_button, &tmp);
  g_signal_connect(G_OBJECT(button), "clicked",
		  G_CALLBACK(stop_auto_move), &t);

  /* 显示窗口 */
  gtk_widget_show_all (window);
    
  /* 进入事件循环 */
  gtk_main ();
    
  return 0;
}
