###20090423####
关闭的难点总结：

问题描述：
我们需要添加一个功能，该功能可以关闭当前打开的程序。
把关闭程序相关的代码编译成插件，加入到hildon-desktop的statusbar中，然后可以通过点击这个插件对应的按钮关闭当前打开的程序(网上下载的，或者自己编写的简单gtk等图形程序)。
但是，即使这个关闭插件的代码是复用过来的，并且该代码在intel上的板子上面都好用，在我们自己的板子上，一些模块如audio,video等却无法关闭。

分析原因：
请教过陈小宇、杜宇等前辈之后，得出了以下可能的原因：
1）板子体系结构不兼容。
那些无法关闭的模块，是从前辈们那里复用过来的，他们的板子和我们的板子的结构是不一样的。（这些模块都是用OBJECT UI编写的，所以推测，这些代码的内部可能是和hildon-desktop不兼容的。）

2）代码内部没有接收关闭信号的处理机制。
由于模块不是直接用hildon-desktop的机制来写的，所以出来的程序可能内部没有处理hildon-desktop发送的关闭消息的机制。这样即使关闭程序的消息发出来了，程序也无法关闭。（在大家调试模块的时候一般都是用ctrl-c来强行关闭模块的，而模块上面并没有发现关闭程序的部分，所以有此推测）

3）hildon-desktop无法获得当前运行的活动程序的窗口。
即使模块没有关闭自身程序的相关处理，但是也应该可以销毁程序的窗口，因为窗口的显示是由窗口管理器来决定的。
hildon-desktop关闭窗口的代码部分处理方式一般分为两步：
首先，获得当前运行程序的窗口。
其次，根据获得的当前的活动窗口，销毁该窗口，并发送关闭的消息给运行的程序。
但是，hildon-desktop似乎无法获得那些无法关闭程序的活动窗口，这样也就无法与程序窗口通信了。(我曾尝试使用最初的hildon-desktop，在其中运行那些模块，发现task navigator中没有列出那些模块，而一般来说在hildon-desktop上运行的程序都会在task navigator上显示出来的)和前辈们请教一番之后，发现可能需要为相关的模块中添加关闭程序和处理窗口消息相关的函数，这还需要对窗口管理的机制有所了解。下面是一个网址，希望能够有所帮助：
http://standards.freedesktop.org/wm-spec/1.3/index.html


解决方法及缺陷：

1）利用DBUS。
这个方法需要做的是：
为待关闭的模块添加接收dbus消息的处理，处理函数是关闭程序本身。该方法的缺点是：需要在相关的模块代码内部添加处理DBUS消息的代码。
2）利用kill。
先列出所有运行的程序，然后用kill方法把需要关闭的程序给关闭。这个方法的缺点是：无法获得当前运行的活动模块。
3）复用hildon-desktop的相关代码。(这个方法才是最治本的方法！！)
先获取活动程序的窗口，再销毁窗口，以及关闭和该窗口关联的程序（这需要程序中有处理关闭自身的代码）。缺点是：目前的hildon-desktop无法获得当前活动程序的窗口。
