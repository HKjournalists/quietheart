通过尝试，终于了解到如何才能够把插件加载上去了。
这里将说明各种行和不行的情况，及其原因。
在此之前，先说明一点，两种写插件的方式：
1,官方的helloworld源程序，是通过定义一个宏来识别插件。结合.desktop中X-Path字段
目录files下的hello-world-app.tar.gz就是这样写的。
2，另外的方法是通过<name>_entry函数识别的。结合.desktop中X-status-bar-plugin字段
目录files下的taskmanager.tar.gz就是这样写的。

=================
对于第1种方法写的插件，是通过
HD_DEFINE_PLUGIN(HildonStatusBarCloseApp,
		 hildon_status_bar_helloworld,
	       	 STATUSBAR_TYPE_ITEM);
类似的宏来识别并根据配置加载该插件的。
当.desktop文件用X-Path指明插件后，会根据这个宏定义，在默认目录/usr/lib/hildon-desktop下面寻找并加载插件。

4种所有可能的配置方法情况下看插件能否加载，以及可能的原因：
1),.desktop文件,用X-Path指明,目录为/usr/lib/hildon-desktop,行.
因为具有插件的宏定义及X-Path默认目录.../lib/hildon-desktop正确，可以加载插件.

2),.desktop文件用X-status-bar-plugin指明,目录为/usr/lib/hildon-status-bar,不行。
因为用X-status-bar-plugin指明后会寻找<name>_entry函数来加载,但这里没有这个函数。

3),.desktop文件,用X-Path指明,目录为/usr/lib/hildon-status-bar,不行.
因为虽然有插件宏定义，但是X-Path的默认目录设错了，所以不行。

4),.desktop文件用X-status-bar-plugin指明,目录为/usr/lib/hildon-desktop,不行。
因为无宏定义，且X-status-bar-plugin默认路径为.../lib/hildon-status-bar,所以不行。	
=================
对于第2种方法些的插件，是通过函数
<name>_entry
这样类似的函数来识别并且根据配置加载插件的。
当.desktop文件用X-status-bar-plugin来指定插件后，会先寻找插件代码中的<name>_entry函数，然后在默认目录/usr/lib/hildon-status-bar下面寻找statusbar插件。

4种所有可能的配置方法情况下看插件能否加载，以及可能的原因：
1),.desktop文件用X-status-bar-plugin指明,目录为/usr/lib/hildon-status-bar,行。
因为用entry函数来加载,并且默认目录为.../lib/hildon-status-bar,都对,所以行。

2),.desktop文件,用X-Path指明,目录为/usr/lib/hildon-desktop,不行.
因为没有插件的宏定义尽管X-Path默认目录.../lib/hildon-desktop正确，所以也不行.

3),.desktop文件,用X-Path指明,目录为/usr/lib/hildon-status-bar,不行.
因为没有插件的宏定义且X-Path默认目录也设错了，所以不行。

4),.desktop文件用X-status-bar-plugin指明,目录为/usr/lib/hildon-desktop,不行。
因为尽管有entry但X-status-bar-plugin的默认目录设错了，所以不行.

由此可知，一定要注意的是：
1）源代码中是宏定义还是entry函数
2）.desktop文件中是X-Path还是X-status-bar-plugin
3)插件目录是/usr/lib/hildon-desktop还是/usr/lib/hildon-status-bar
至于.desktop文件的位置，只要在.conf文件中指定对了就没有问题。

另外，应该是默认从主目录中的.osso/hildon-desktop中找.conf文件，如果这里没有，则从/etc/hildon-desktop中加载.conf文件并且把这个conf文件复制一份到主目录的.osso/hildon-desktop中。（不知道为什么实践过了之后不行）
