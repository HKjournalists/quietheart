Linux下C语言编程入门-6关于重定向操作
六、关于重定向操作
=======================
1,相关函数
-------
#include <unistd.h>;
int dup2(int oldfd,int newfd);
dup2 将用 oldfd 文件描述符来代替 newfd 文件描述符,同时关闭 newfd 文件描述符.也就是说,所有向 newfd 操作都转到 oldfd 上面.

2,举例
-------

#include <unistd.h>
#include <stdio.h>
#include <errno.h>
#include <fcntl.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#define BUFFER_SIZE 1024
int main(int argc,char **argv)
{
	int fd;
	char buffer[BUFFER_SIZE];
	if(argc!=2)
	{
		fprintf(stderr,"Usage:%s outfilename\n\a",argv[0]);
		exit(1);
	}
	if((fd=open(argv[1],O_WRONLY|O_CREAT|O_TRUNC,S_IRUSR|S_IWUSR))==-1)
	{/*首先打开文件*/
		fprintf(stderr,"Open %s Error:%s\n\a",argv[1],strerror(errno));
		exit(1);
	}
	if(dup2(fd,STDOUT_FILENO)==-1)
	{/*$$$$$$$$$$$$$$$$$$$$关键操作，将标准输出重定向到fd文件描述符号上面$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/
		fprintf(stderr,"Redirect Standard Out Error:%s\n\a",strerror(errno));
		exit(1);
	}
	fprintf(stderr,"Now,please input string");
	fprintf(stderr,"(To quit use CTRL+D)\n");
	while(1)
	{
		fgets(buffer,BUFFER_SIZE,stdin);
		if(feof(stdin))break;

		/*对标准输出的操作被重定向到fd文件描述符号上面了*/
		write(STDOUT_FILENO,buffer,strlen(buffer));
	}

	/*这里从标准输出的内容也被重定向到了文件中*/
	printf("this is from the standare output.\n");

	/*程序结束了，是不是应该关闭不用的文件呢？？？？？？？？？？？*/
	exit(0);
}
