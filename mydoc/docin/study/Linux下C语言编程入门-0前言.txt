Linux下C语言编程入门-0前言
【本文来源】
这个文档是我进入公司以来整理的第一篇文档。当时我刚正式地开始使用Linux（因为工作环境就是Ubuntu下面），也不知道自己该看什么学什么，看到一本《Linux操作系统C语言编程入门》，从名字来看感觉不错就开始学习了。同时自己给自己下定了一个决心那就是每天早上早到公司半个多小时，利用这时间来仔细、慢慢地学习和整理一些东西，至少让自己每天不要一无所获，现在这个决心已经是我每天习惯中的一部分了。从2月末整理，一直到5月中旬。
这本书看起来也像是某个人的学习经验的总结，或者是某本外文书的简单翻译。我也没有找到是那个出版社那个作者写得。不过包含的内容也确实是如其题目，整本书不过一百几十页，但是感觉内容有点乱，我整理的速度也很慢，在整理的过程中加入了我自己的理解，将部分内容也简化与修正了，为了理解书中的意思，我通过各种途径也学到了不少知识。
所以这本书不能说是完全的原创。说到这里，我忽然发现有两种有意思的说法：1，当你把知识学到手了，再把它们用自己的语言翻译出来，这就是原版。2，当你把知识学到手了，再把它们用自己的语言翻译出来，这就是盗版。那么我的这篇文章是盗版还是原版呢？^_^

【本文内容】
看过本文，应该能够大体了解Linux下面的C编程是怎么回事了。知道Linux下面C语言编程会涉及到哪些内容，为以后继续学习指明了方向。如果你不想花费太多的时间太过仔细的学习本文，却很想急迫地尝试在Linux下运行您的程序，那么就看本前言中的[最简实践]部分。
本文包含的主要内容如下：
一、关于Makefile
二、关于进程和用户信息
三、关于进程的创建和执行
四、关于文件操作
五、关于管道操作
六、关于重定向操作
七、关于时间的操作
八、关于计时器
九、信号简介
十、关于信号操作
十一、关于信号量
十二、关于进程之间的通信
十三、关于线程
十四、关于网络编程(1)TCP
十五、关于网络编程(2)UDP
十六、关于高级套接字函数
十七、关于服务器模型
十八、关于多路复用I/O
十九、其他相关

【本文约定】
结尾有"?????????"的地方是有些不明确的地方。
结尾有"*********"的地方是有待更新的地方。
注释中有"$$$$$$$$$"的是关键

【必备知识】
学习本文的内容您需要至少有以下的基础：
1.熟悉C语言
2.了解操作系统相关知识
3.了解简单的Linux操作

【最简实践】
会在Linux下面编程，gcc和gdb两个工具是必须会用的。gcc用来编译您的源程序，gdb用来调试。
1,使用gcc编译程序
1)编辑源程序内容如下：
/*test.c*/
#include <stdio.h>
int main(int argc, char *argv[])
{
	printf(“hello!\n”);
	return 0;
}

2）编译源代码：
$gcc test.c -o test
这样会把你刚才编写的程序编译链接成一个可执行文件”test”.

3)运行程序：
$./test
这样就会看到屏幕上打印的”hello!”了。

2,使用gdb调试程序
gdb 是调试程序需要用到的工具。
在初步了解gcc之后，调试程序过程如下：
1)假设源文件名字：test.c
2)编译：$gcc -g test.c -o test 
注意：因为要使用gdb调试工具所以必须加上-g选项打开调试开关
结果生成可执行文件test,可以用$./test运行
3)打开调试器：$gdb test
这样会进入与gdb交互的界面，可以开始调试了（或者$gdb然后在输入(gdb)file test)。
4)查看源代码：(gdb)list 
(按回车可以重复上次的命令,list会自动增加偏移量，如果想查看0行就list 0）
5)运行程序：(gdb)run 
(显示运行结果）
6)在第24行设置断点：break 24
运行run将在断点处停止
7)在断点处后继续运行：next
在当前函数单步执行程序
8)添加s[size]作为观察变量?：watch s[size]
9)退出：q


作者：QuietHeart
QQ：649711825
Email：quiet_heart000@126.com
 