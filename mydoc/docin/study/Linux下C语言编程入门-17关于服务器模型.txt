Linux下C语言编程入门-17关于服务器模型
十七、关于服务器模型
=======================
关于TCP/IP协议可以参见相关计算机网络的书籍。这里简单说一下服务器模型。
目前最常用的服务器模型：
循环服务器:循环服务器在同一个时刻只可以响应一个客户端的请求。
并发服务器:并发服务器在同一个时刻可以响应多个客户端的请求。 

1,UDP 循环服务器可以用下面的算法来实现:
-------
socket(...);
bind(...);
while(1)
{
	recvfrom(...);
	process(...);
	sendto(...);
}
UDP 是非面向连接的,没有一个客户端可以老是占住服务端. 只要处理过程不是死循环, 服务器对于每一个客户机的请求总是能够满足.

2,TCP循环服务器可以用下面的算法来实现:
-------
socket(...);
bind(...);
listen(...);
while(1)
{
	accept(...);
	while(1)
	{
		read(...);
		process(...);
		write(...);
	}
	close(...);
}
TCP 循环服务器一次只能处理一个客户端的请求.只有在这个客户的所有请求都满足后,服务器才可以继续后面的请求.这样如果有一个客户端占住服务器不放时,其它的客户机都不能工作了.因此,TCP 服务器一般很少用循环服务器模型的.

3,TCP 并发服务器可以用下面的算法来实现:
-------
socket(...);
bind(...);
listen(...);
while(1)
{
	accept(...);
	if(fork(..)==0)
	{
		while(1)
		{
			read(...);
			process(...);
			write(...);
		}
		close(...);
		exit(...);
	}
	close(...);
}
TCP 并发服务器可以解决 TCP 循环服务器客户机独占服务器的情况. 不过为了响应客户机的请求,服务器要创建子进程来处理. 而创建子进程非常消耗资源.

