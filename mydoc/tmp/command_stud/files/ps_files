20090427
看的还是有点模糊，尤其是有时候参数前面有‘－’有时候没有。先写下来。
http://blog.sina.com.cn/s/blog_4cdc965f0100bs81.html
http://blog.163.com/wu_chun_hu/blog/static/4914205820086117756592/
－－－－－－
ps简介

要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而ps命令就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。ps 为我们提供了进程的一次性的查看，它所提供的查看结果并不动态连续的；如果想对进程时间监控，应该用 top 工具。
　 ps命令最常用的还是用于监控后台进程的工作情况，因为后台进程是不和屏幕键盘这些标准输入/输出设备进行通信的，所以如果需要检测其情况，便可以使用ps命令了。
-----------------------------------------------
命令语法格式：

ps [选项]


命令选项说明：
　　-e 显示所有进程。
　　-f 全格式，用树形格式来显示进程。
　　h 不显示标题(注意，这里面没有前面的横线)。
　　-l 长格式。
　　-w 宽输出。

a 显示终端上的所有进程，包括其他用户的进程。(注意和-a不同)
r 只显示正在运行的进程。
x 显示没有控制终端的进程。
j 用任务格式来显示进程
u 按用户名和启动时间的顺序来显示进程
ww 避免详细参数被截断；
----------------------------------------------
我们常用的选项是组合是 aux 或 lax，还有参数 f 的应用。

（ps aux 或 lax） 输出的解释

USER 进程的属主；

PID 进程的ID；

PPID 父进程；

%CPU 进程占用的CPU百分比；

%MEM 占用内存的百分比；

NI 进程的NICE值，数值大，表示较少占用CPU时间；

VSZ 进程虚拟大小；

RSS 驻留中页的数量；

TTY 终端ID

STAT 进程状态（有以下几种）

D 无法中断的休眠状态（通常 IO 的进程）；

R 正在运行可中在队列中可过行的；

S 处于休眠状态；

T 停止或被追踪；

W 进入内存交换（从内核2.6开始无效）；

X 死掉的进程（从来没见过）；

Z 僵尸进程；

< 优先级高的进程

N 优先级较低的进程

L 有些页被锁进内存；

s 进程的领导者（在它之下有子进程）；

l 多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）；

+ 位于后台的进程组；

WCHAN 正在等待的进程资源；

START 启动进程的时间；

TIME 进程消耗CPU的时间；

COMMAND 命令的名称和参数；
--------------------------------------------
举例子：
最常用的三个参数是u、a、x，
下面将通过例子来说明其具体用法。
　　[例] 以root身份登录系统，查看当前进程状况

　　$ ps

　　PID TTY TIME COMMAND

　　5800 ttyp0 00:00:00 bash

　　5835 ttyp0 00:00:00 ps

　　可以看到，显示的项目共分为四项，依次为PID（进程ID）、TTY（终端名称）、TIME（进程执行时间）、COMMAND（该进程的命令行输入）。

　　可以使用u选项来查看进程所有者及其他一些详细信息，如下所示：

　　$ ps u

　　USER PID %CPU %MEM USZ RSS TTY STAT START TIME COMMAND

　　test 5800 0.0 0.4 1892 1040 ttyp0 S Nov27 0:00 -bash

　　test 5836 0.0 0.3 2528 856 ttyp0 R Nov27 0:00 ps u

　　在bash进程前面有条横线，意味着该进程便是用户的登录shell，所以对于一个登录用户来说带短横线的进程只有一个。还可以看到%CPU、%MEM两个选项，前者指该进程占用的CPU时间和总时间的百分比；后者指该进程占用的内存和总内存的百分比。在这种情况下看到了所有控制终端的进程；但是对于其他那些没有控制终端的进程还是没有观察到，所以这时就需要使用x选项。使用x选项可以观察到所有的进程情况。
-------------------------------
ps -auxfww
这是我自己试的，可以树形显示所有进程并且没有截断。 
