http://cache.baidu.com/c?m=9f65cb4a8c8507ed4fece7631046893b4c4380143fd3d1027fa3c215cc790b1a1035b9e673760d548d98297a40e91a1ab1a12b79350627b29ecd8848dfb09628298b2435711d864513d704bb8e1b65972f872cedb868e3ad863784dad7c4de2444ba25120af0e7fb5a1763ce78f1642693a58e3f174866bafa4715e858073eef2857c541ee90457971f5e1dc2c5bb229c71117&p=917ac81085cc45e40cbd9b7549&user=baidu
http://blog.163.com/bieahoff/blog/static/90757772009624113332636/

crosstool制作arm-linux交叉编译工具链
学习   2009-07-28 21:38   阅读41   评论0  
字号： 大大  中中  小小
今天使用crosstool制作了arm-linux交叉编译工具链。

通过http://www.kegel.com/crosstool/了解crosstool。

具体步骤如下：

下载crosstool-0.43.tar.gz
mkdir      ~/edb9261/crosstool
cp     crosstool-0.43.tar.gz     ~/edb9261/crosstool
cd    ~/edb9261/crosstool
tar     -jxvf crosstool-0.43.tar.gz
mkdir downloads
cd crosstool-0.43/
这个时候我们就进入了crosstool的目录里面，接着我们选择自己希望的模板,这儿是以arm9做试验玩，因此选择了 demo-arm9tdmi.sh 做模板。
vim demo-arm9tdmi.sh
我们可以看到如下内容：
# !/bin/bash
# This script has one line for each known working toolchain
# for this architecture.  Uncomment the one you want.
# Generated by generate-demo.pl from buildlogs/all.dats.txt

set -ex
TARBALLS_DIR=/home/bieahoff/edb9261/crosstool/downloads  # 定义工具链源码所存放位置。（我自己加的解释）
RESULT_TOP=/home/bieahoff/edb9261/crosstool/install  # 定义工具链的安装目录（我自己加的解释）
export TARBALLS_DIR RESULT_TOP
GCC_LANGUAGES="c,c++"   # 定义支持C, C++语言（我自己加的解释）
export GCC_LANGUAGES

# Really, you should do the mkdir before running this,
# and chown /opt/crosstool to yourself so you don't need to run as root.
mkdir -p $RESULT_TOP

#eval `cat arm9tdmi.dat gcc-3.2.3-glibc-2.2.5.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.2.3-glibc-2.3.2.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.2.3-glibc-2.3.2-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.3.6-glibc-2.2.5.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.3.6-glibc-2.3.2.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.3.6-glibc-2.3.2-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.2.5.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.3.2.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.3.2-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.3.5.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.3.5-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.3.6.dat` sh all.sh --notest
eval `cat arm9tdmi.dat gcc-3.4.5-glibc-2.3.6-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.0.2-glibc-2.3.2.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.0.2-glibc-2.3.2-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.0.2-glibc-2.3.5.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.0.2-glibc-2.3.5-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.0.2-glibc-2.3.6.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.0.2-glibc-2.3.6-tls.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.1.0-glibc-2.3.2.dat` sh all.sh --notest
#eval `cat arm9tdmi.dat gcc-4.1.0-glibc-2.3.2-tls.dat` sh all.sh --notest

echo Done.

其中红色字为自己修改的地方,看最后一个红色的行，表示我们要编译 gcc 3.4.5 的，
然后保存退出。

然后再打开文件demo-arm9tdmi.sh里选择的文件arm9tdmi.dat
vim arm9tdmi.dat
我们可以看到如下内容：
KERNELCONFIG=`pwd`/arm.config   # 内核的配置（我自己加的解释）
TARGET=arm-9tdmi-linux-gnu  # 编译生成的工具链名称（我自己加的解释）
GCC_EXTRA_CONFIG="--with-cpu=arm9tdmi --enable-cxx-flags=-mcpu=arm9tdmi"
TARGET_CFLAGS="-O"      # 编译选项（我自己加的解释）
其中红色的文字可以根据自己的需要做修改，一般是 arm-linux ，符合网上面很多编译情形的。
然后保存退出。

然后再打开文件demo-arm9tdmi.sh里选择的文件gcc-3.4.5-glibc-2.3.6-tls.dat
vim gcc-3.4.5-glibc-2.3.6-tls.dat
我们可以看到如下内容：
INUTILS_DIR=binutils-2.15
GCC_DIR=gcc-3.4.5
GLIBC_DIR=glibc-2.3.6
LINUX_DIR=linux-2.6.9
LINUX_SANITIZED_HEADER_DIR=linux-libc-headers-2.6.12.0
GLIBCTHREADS_FILENAME=glibc-linuxthreads-2.3.6
GLIBC_EXTRA_CONFIG="$GLIBC_EXTRA_CONFIG --with-tls --with-__thread  --enable-kernel=2.4.18"
将红色的字对应的bz2包下载下来（这些文件我基本都是在 chinaunix 那儿下载的，下载速度很快），放到前面设定的/home/bieahoff/edb9261/crosstool/downloads目录中。不下载也可以，sh脚本中自己会用wget下载，但是会等很多时间,比自己直接下载多出了很多很多的时间（具体多多少，自己试验一下就知道了，保证你试了后会很后悔，呵呵^_^）。
然后执行
./demo-arm9tdmi.sh
注：不要以root用户登录进行编译
执行的时间可能稍微有点长，执行完成功后，会在/home/bieahoff/edb9261/crosstool/install/gcc-3.4.5-glibc-2.3.6/arm-9tdmi-linux-gnu/bin目录里面找到生成的编译工具。

（1）保证你的ubuntu8.10下安装了以下软件开发工具。
Bison
flex
build-essential
patch
libncurses5-dev
我并没有试过没装这些工具的后果，都是网上的经验，你要是不信这个邪，就自己吃吃这个螃蟹。
（2）因为ubuntu8.10自带的是gcc-4.3.2无法用crosstool正常编译交叉编译器，所以必须安装gcc-4.1,但是不必卸载4.3.2。方法是用新立得软件包管理器安装gcc-4.1，之后 参考
chinazcw的方法
sudo rm /usr/bin/gcc            (删除ＧＣＣ，它只是个到gcc-4.3.2的软连接文件)
sudo ln-s /usr/bin/gcc-4.1 /usr/bin/gcc       (建立ＧＣＣ到gcc-4.1的软连接)

（3）如果你运行
ls -la /bin/sh
命令看到/bin/sh其实是一个指向dash的软链接，则请运行以下命令，将/bin/sh链接到bash。
sudo mv /bin/sh /bin/sh.old
sudo ln -sf bash /bin/sh
